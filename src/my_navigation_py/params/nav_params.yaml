
amcl:
  ros__parameters:
    use_sim_time: false  
    alpha1: 0.01  # 旋转->旋转误差系数
    alpha2: 0.01  # 平移->旋转误差系数
    alpha3: 0.01  # 平移->平移误差系数
    alpha4: 0.01  # 旋转->平移误差系数
    alpha5: 0.01  # 差分驱动漂移误差系数
    base_frame_id: "base_link"  # 机器人基座坐标系
    beam_skip_distance: 0.5  # 跳过激光束的距离阈值
    beam_skip_error_threshold: 0.9  # 激光束误差阈值
    beam_skip_threshold: 0.3  # 激光束跳过阈值
    do_beamskip: false  # 是否启用激光束跳过功能
    global_frame_id: "map"  # 全局坐标系s
    lambda_short: 0.1  # 激光束短距离权重参数
    laser_likelihood_max_dist: 2.0  # 激光束最大似然距离
    laser_max_range: 3.5 # 激光雷达最大测量距离
    laser_min_range: 0.15  # 激光雷达最小测量距离（-1表示使用传感器默认值）
    laser_model_type: "likelihood_field"  # 激光模型类型，用于计算粒子权重（beam、likelihood_field、likelihood_field_prob）
    max_beams: 200  # 每次更新使用的最大激光束数量
    max_particles: 5000  # 最大粒子数量
    min_particles: 2000  # 最小粒子数量
    odom_frame_id: "odom"  # 里程计坐标系 
    pf_err: 0.02  # 粒子滤波器的误差参数
    pf_z: 0.85  # 粒子滤波器的参数，影响粒子权重
    recovery_alpha_fast: 0.0  # 快速恢复参数
    recovery_alpha_slow: 0.0  # 慢速恢复参数
    resample_interval: 2  # 粒子重采样间隔
    robot_model_type: "nav2_amcl::DifferentialMotionModel"  # 机器人运动模型类型
    save_pose_rate: 0.5  # 保存机器人姿态的频率
    sigma_hit: 0.05  # 激光束命中标准差
    tf_broadcast: true  # 是否广播坐标变换
    transform_tolerance: 0.3  # 坐标变换的容差
    update_min_a: 0.01  # 最小旋转角度更新阈值
    update_min_d: 0.025  # 最小线性距离更新阈值
    z_hit: 0.85  # 激光束命中的权重
    z_max: 0.05  # 激光束最大距离的权重
    z_rand: 0.059  # 激光束随机噪声的权重
    z_short: 0.24  # 激光束短距离的权重
    scan_topic: "/scan"  # 激光雷达话题名称

    set_initial_pose: True
    initial_pose.x: 0.9
    initial_pose.y: 0.3
    initial_pose.z: 0.0
    initial_pose.yaw: 0.0




amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False
    # laser_queue_size: 100



bt_navigator:
  ros__parameters:
    use_sim_time: False
    transform_tolerance: 0.5 #变换容差
    goal_reached_tol: 0.1 #接受姿势作为目标的容忍度(m)
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /chassis/odom/user
    # odom_topic: /odom

    bt_loop_duration: 20        #BT 执行每次迭代的持续时间（以毫秒为单位
    default_server_timeout: 20  #BT 操作节点等待操作服务器确认时的默认超时值（以毫秒为单位）
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    #plugin_lib_names: #行为树节点共享库列表，Humble后的版本默认包含所有NAV2 BT库，这里可以加入自定义BT节点
    error_code_names:
    - compute_path_error_code 
    - follow_path_error_code

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

# controller_server:
#   ros__parameters:
#     use_sim_time: False
#     controller_frequency: 20.0
#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.005
#     min_theta_velocity_threshold: 0.001
#     controller_plugins: ["FollowPath"]
    
#     # DWB parameters
#     FollowPath:
#       # cmd_vel_topic: "/chassis/cmd_vel"
#       plugin: "dwb_core::DWBLocalPlanner"
#       debug_trajectory_details: True
#       min_vel_x: 0.05
#       min_vel_y: 0.0
#       max_vel_x: 0.22
#       max_vel_y: 0.0
#       max_vel_theta: 0.6
#       min_speed_xy: 0.0
#       max_speed_xy: 1.0
#       min_speed_theta: 0.05
#       acc_lim_x: 2.5
#       acc_lim_y: 0.0
#       acc_lim_theta: 2.0  
#       decel_lim_x: -2.5
#       decel_lim_y: 0.0
#       decel_lim_theta: -2.0
#       vx_samples: 20
#       vy_samples: 0
#       vtheta_samples: 40
#       sim_time: 3.0
#       linear_granularity: 0.05
#       angular_granularity: 0.025
#       transform_tolerance: 1.0
#       xy_goal_tolerance: 0.2
#       trans_stopped_velocity: 0.3
#       short_circuit_trajectory_evaluation: False
#       stateful: True
#       critics: ["BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "RotateToGoal"]
#       BaseObstacle.scale: 0.02
#       PathAlign.scale: 32.0
#       PathAlign.forward_point_distance: 0.1
#       GoalAlign.scale: 24.0
#       GoalAlign.forward_point_distance: 0.1
#       PathDist.scale: 32.0
#       GoalDist.scale: 24.0
#       RotateToGoal.scale: 32.0
#       RotateToGoal.slowing_factor: 5.0
#       RotateToGoal.lookahead_time: -1.0




controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.001
    controller_plugins: ["FollowPath"]
    
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"

      # 保持预测参数不变
      time_steps: 40
      model_dt: 0.05
      batch_size: 1000
      iteration_count: 1
      temperature: 0.3
      gamma: 0.015

      motion_model: "DiffDrive"
      vx_max: 0.25
      vx_min: -0.35
      vy_max: 0.0
      wz_max: 0.6
      vx_std: 0.15       # ↑ 增大采样标准差，让探索范围更大
      wz_std: 0.3        # ↑ 增大角速度探索

      critics: ["ConstraintCritic",
                "CostCritic",
                "GoalCritic",
                "GoalAngleCritic",
                "PathAlignCritic",
                "PathFollowCritic",
                "PathAngleCritic",
                "PreferForwardCritic"]

      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0   # ↓ 降低约束权重 (原来 4.0)

      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 1.5   # ↓ 降低障碍物代价权重 (原来 3.0)
        critical_cost: 200.0   # ↓ 放宽临界代价值 (原来 300.0)
        consider_footprint: true
        collision_cost: 500000.0  # ↓ 碰撞代价降低一半（还是极大）
        near_goal_distance: 0.5   # ↓ 近目标时更放松
        trajectory_point_step: 2

      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 6.0   # ↑ 稍微加强朝向目标

      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0

      PreferForwardCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0   # ↓ 降低“必须向前”的惩罚，允许更灵活

      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 10.0  # ↓ 减弱路径严格对齐 (原来 12.0)
        trajectory_point_step: 4
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false

      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 6.0   # ↑ 更重视跟随路径

      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0

#
#    # 旋转控制器
#    Spin:
#      plugin: "nav2_rotation_shim_controller::RotationShimController"
#      primary_controller: "dwb_core::DWBLocalPlanner"
#      angular_dist_threshold: 0.785  # 45度
#      forward_sampling_distance: 0.3
#      rotate_to_heading_angular_vel: 0.6
#      max_angular_accel: 2.0
#      simulate_ahead_time: 1.0
#
#      critics: [ "RotateToGoal" ]   # 必须加 critics，否则会报错
#      RotateToGoal.scale: 32.0
#      RotateToGoal.slowing_factor: 5.0
#      RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 2
      height: 2
      resolution: 0.02
      footprint: "[ [0.245, 0.24], [0.245, -0.24], [-0.245, -0.24], [-0.245, 0.24] ]"
      plugins: ["obstacle_layer", "voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.4 # 膨胀距离
        cost_scaling_factor: 6.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        track_unknown_space: false  
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: True
          data_type: "LaserScan"
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: pointcloud
        pointcloud:
          topic: /intel_realsense_r200_depth/points
          max_obstacle_height: 2.0
          clearing: true
          marking: True
          data_type: "PointCloud2"
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      footprint: "[ [0.245, 0.24], [0.245, -0.24], [-0.245, -0.24], [-0.245, 0.24] ]"
      resolution: 0.02
      plugins: ["static_layer", "obstacle_layer", "voxel_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        track_unknown_space: false  
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: True
          data_type: "LaserScan"
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: pointcloud
        pointcloud:
          topic: /intel_realsense_r200_depth/points
          max_obstacle_height: 2.0
          clearing: true
          marking: True
          data_type: "PointCloud2"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 6.0
        inflation_radius: 0.4
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "map.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5000
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False


